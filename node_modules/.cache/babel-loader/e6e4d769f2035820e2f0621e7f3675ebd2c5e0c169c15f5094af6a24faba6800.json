{"ast":null,"code":"import { applyMiddleware, legacy_createStore as createStore } from \"redux\";\nimport reducer from \"../reducers\";\nimport thunk from 'redux-thunk';\nexport const initCatalog = () => {\n  return async dispatch => {\n    try {\n      const response = await fetch('GET/api/products');\n      const data = await response.json();\n      dispatch({\n        type: \"INITIALIZE_CATALOG\",\n        payload: data\n      });\n    } catch (error) {\n      console.error('Error initializing catalog:', error);\n    }\n  };\n};\nexport const productDetails = id => {\n  return async dispatch => {\n    try {\n      const response = await fetch(`GET/api/products/{$id}`);\n      const data = await response.json();\n      dispatch({\n        type: \"PRODUCT_DETAILS\",\n        payload: data\n      });\n    } catch (error) {\n      console.error('Error initializing catalog:', error);\n    }\n  };\n};\nconst store = createStore(reducer, applyMiddleware(thunk));\n\n// export default catalogAction;","map":{"version":3,"names":["applyMiddleware","legacy_createStore","createStore","reducer","thunk","initCatalog","dispatch","response","fetch","data","json","type","payload","error","console","productDetails","id","store"],"sources":["C:/Users/kasig/Desktop/confronto/assign3/src/store/actions/catalogAction.js"],"sourcesContent":["import { applyMiddleware, legacy_createStore as createStore } from \"redux\";\r\nimport reducer from \"../reducers\";\r\nimport thunk from 'redux-thunk';\r\n\r\nexport const initCatalog = () => {\r\n    return async(dispatch) => {\r\n        try {\r\n            const response = await fetch('GET/api/products');\r\n            const data = await response.json();\r\n\r\n            dispatch({\r\n                type:\"INITIALIZE_CATALOG\",\r\n                payload: data,\r\n            });\r\n        } catch (error) {\r\n            console.error('Error initializing catalog:', error);\r\n        }\r\n    }\r\n}\r\n\r\nexport const productDetails = (id) => {\r\n    return async(dispatch) => {\r\n        try {\r\n            const response = await fetch(`GET/api/products/{$id}`);\r\n            const data = await response.json();\r\n\r\n            dispatch({\r\n                type: \"PRODUCT_DETAILS\",\r\n                payload: data,\r\n            });\r\n        } catch (error) {\r\n            console.error('Error initializing catalog:', error);\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst store = createStore(reducer, applyMiddleware(thunk));\r\n\r\n// export default catalogAction;"],"mappings":"AAAA,SAASA,eAAe,EAAEC,kBAAkB,IAAIC,WAAW,QAAQ,OAAO;AAC1E,OAAOC,OAAO,MAAM,aAAa;AACjC,OAAOC,KAAK,MAAM,aAAa;AAE/B,OAAO,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAC7B,OAAO,MAAMC,QAAQ,IAAK;IACtB,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kBAAkB,CAAC;MAChD,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAElCJ,QAAQ,CAAC;QACLK,IAAI,EAAC,oBAAoB;QACzBC,OAAO,EAAEH;MACb,CAAC,CAAC;IACN,CAAC,CAAC,OAAOI,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACvD;EACJ,CAAC;AACL,CAAC;AAED,OAAO,MAAME,cAAc,GAAIC,EAAE,IAAK;EAClC,OAAO,MAAMV,QAAQ,IAAK;IACtB,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,wBAAuB,CAAC;MACtD,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAElCJ,QAAQ,CAAC;QACLK,IAAI,EAAE,iBAAiB;QACvBC,OAAO,EAAEH;MACb,CAAC,CAAC;IACN,CAAC,CAAC,OAAOI,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACvD;EACJ,CAAC;AACL,CAAC;AAMD,MAAMI,KAAK,GAAGf,WAAW,CAACC,OAAO,EAAEH,eAAe,CAACI,KAAK,CAAC,CAAC;;AAE1D"},"metadata":{},"sourceType":"module","externalDependencies":[]}